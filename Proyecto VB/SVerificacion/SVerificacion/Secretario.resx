<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IgCIiAIiIAiIgH//2Q==
</value>
  </data>
</root>